<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Activly2</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <link rel="stylesheet" href="~/Activly2.styles.css" asp-append-version="true" />
    <style>
        .faq-answer {
            display: none;
            margin-top: 5px;
            padding: 10px;
            background-color: #f8f9fa;
            border-radius: 5px;
        }
        .social-links .social-icon {
            font-size: 20px;
            margin-right: 10px;
            color: #6c757d;
        }
        .social-links .social-icon:hover {
            color: #007bff;
        }
    </style>
</head>

<body>
<header>
    <nav class="navbar navbar-expand-lg navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container-fluid">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Activly</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Edit Profile</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="faqDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            FAQ
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="faqDropdown">
                            <li>
                                <button class="dropdown-item" onclick="toggleAnswer(this, event)">Jak mogę dodać nową aktywność?</button>
                                <p class="faq-answer">Wybierz opcję "Dodaj aktywność" i wypełnij szczegóły.</p>
                            </li>
                            <li>
                                <button class="dropdown-item" onclick="toggleAnswer(this, event)">Jak działa Heatmapa?</button>
                                <p class="faq-answer">Heatmapa pokazuje obszary z największą liczbą aktywności.</p>
                            </li>
                            <li>
                                <button class="dropdown-item" onclick="toggleAnswer(this, event)">Czy mogę edytować aktywność?</button>
                                <p class="faq-answer">Obecnie edytowanie aktywności jest niedostępne.</p>
                            </li>
                        </ul>
                    </li>
                </ul>
                <div class="d-flex">
                    <button id="logoutButton" onclick="handleLogout()" class="btn btn-outline-secondary me-2">Log out</button>
                    <button id="loginBtn" class="btn btn-primary">Log In</button>
                </div>
            </div>
        </div>
    </nav>
</header>

<script>
    let userNamesave = null;

    function handleLogin(event) {
        event.preventDefault();
        const formData = new FormData(event.target);
        const loginData = {};
        formData.forEach((value, key) => { loginData[key] = value; });

        fetch(event.target.action, {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams(loginData).toString()
        })
        .then(response => response.ok ? response.json() : Promise.reject(response))
        .then(data => {
            document.getElementById('successMessage').innerText = `Zalogowano jako ${data.login}`;
            document.getElementById('loginBtn').style.display = "none";
            fetch('/api/session/save', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ UserName: data.login })
            });
            location.reload();
        })
        .catch(err => console.error('Error:', err));
    }

    function handleLogout() {
        fetch('/api/session/logout', { method: 'POST' })
            .then(response => response.ok ? response.json() : Promise.reject(response))
            .then(() => {
                document.getElementById("loginBtn").style.display = "inline";
                fetchUserName();
            })
            .catch(err => console.error('Error:', err));
        location.reload();
    }

    function fetchUserName() {
        fetch('/api/session/get')
            .then(response => response.ok ? response.json() : Promise.reject(response))
            .then(data => {
                userNamesave = data.login;
                document.getElementById('userDisplay').innerText = `Logged as: ${data.login}`;
                document.getElementById('logoutButton').style.display = 'block';
                document.getElementById('loginBtn').style.display = 'none';
            })
            .catch(err => {
                console.error('Error:', err);
                document.getElementById('userDisplay').innerText = 'No user logged in';
                document.getElementById('logoutButton').style.display = 'none';
            });
    }

    function toggleAnswer(button, event) {
        event.stopPropagation(); // Zapobiega zamykaniu dropdownu
        const answer = button.nextElementSibling;
        answer.style.display = answer.style.display === "none" || answer.style.display === "" ? "block" : "none";
    }

    window.onload = fetchUserName;
</script>

<div class="container">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

<footer class="border-top footer text-muted">
    <div class="container">
        <div class="footer-content">
            <div class="footer-left">
                <p>&copy; 2024 - Activly2</p>
                <p><small>All rights reserved. No copyright claim.</small></p>
            </div>
            <div class="footer-right">
                <ul class="social-links">
                    <li><a href="https://facebook.com" target="_blank" class="social-icon"><i class="fab fa-facebook-f"></i></a></li>
                    <li><a href="https://twitter.com" target="_blank" class="social-icon"><i class="fab fa-twitter"></i></a></li>
                    <li><a href="https://instagram.com" target="_blank" class="social-icon"><i class="fab fa-instagram"></i></a></li>
                </ul>
            </div>
        </div>
        <div class="footer-links">
            <a href="https://activly2.com/terms" target="_blank">Terms of Service</a> |
            <a href="https://activly2.com/privacy" target="_blank">Privacy Policy</a>
        </div>
    </div>
</footer>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
